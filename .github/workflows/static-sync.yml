name: Deploy Static to Azure Storage

on:
  push:
    branches: [ main ]
    paths: [ "static/**" ]
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    concurrency:
      group: deploy-static-${{ github.ref }}
      cancel-in-progress: false

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Azure Login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Upload & set headers (AAD)
        uses: azure/cli@v2
        with:
          inlineScript: |
            set -euo pipefail
            ACCOUNT="p7costatic"

            # Pequeno retry para aguentar propagação de RBAC
            n=0
            until [ $n -ge 6 ]
            do
              if az storage blob list --account-name $ACCOUNT --container-name '$web' --auth-mode login --num-results 1 >/dev/null 2>&1; then
                echo "AAD access to $ACCOUNT/$web OK"
                break
              fi
              n=$((n+1))
              echo "A aguardar propagação de RBAC… tentativa $n/6"
              sleep 15
            done

            # Upload
            az storage blob upload-batch \
              --account-name $ACCOUNT \
              --auth-mode login \
              -s ./static \
              -d '$web' \
              --overwrite

            # Tipos & cache (TODOS com --auth-mode login)
            az storage blob update --account-name $ACCOUNT --auth-mode login -c '$web' -n index.html --content-type 'text/html; charset=utf-8' || true
            az storage blob update --account-name $ACCOUNT --auth-mode login -c '$web' -n 404.html   --content-type 'text/html; charset=utf-8' || true

            # html
            find static -type f -name '*.html' -printf '%P\n' | while read f; do
              az storage blob update --account-name $ACCOUNT --auth-mode login -c '$web' -n "$f" \
                --content-type 'text/html; charset=utf-8' || true
            done

            # json
            find static -type f -name '*.json' -printf '%P\n' | while read f; do
              az storage blob update --account-name $ACCOUNT --auth-mode login -c '$web' -n "$f" \
                --content-type 'application/json' \
                --content-cache-control 'public, max-age=300, must-revalidate' || true
            done

            # css / js
            find static -type f -name '*.css' -printf '%P\n' | while read f; do
              az storage blob update --account-name $ACCOUNT --auth-mode login -c '$web' -n "$f" \
                --content-type 'text/css; charset=utf-8' \
                --content-cache-control 'public, max-age=31536000, immutable' || true
            done
            find static -type f -name '*.js' -printf '%P\n' | while read f; do
              az storage blob update --account-name $ACCOUNT --auth-mode login -c '$web' -n "$f" \
                --content-type 'application/javascript; charset=utf-8' \
                --content-cache-control 'public, max-age=31536000, immutable' || true
            done

            # imagens
            for ext in jpg jpeg png webp gif svg ico; do
              find static -type f -name "*.$ext" -printf '%P\n' | while read f; do
                case "$ext" in
                  jpg|jpeg) ctype="image/jpeg" ;;
                  png)      ctype="image/png" ;;
                  webp)     ctype="image/webp" ;;
                  gif)      ctype="image/gif" ;;
                  svg)      ctype="image/svg+xml" ;;
                  ico)      ctype="image/x-icon" ;;
                esac
                az storage blob update --account-name $ACCOUNT --auth-mode login -c '$web' -n "$f" \
                  --content-type "$ctype" \
                  --content-cache-control 'public, max-age=31536000, immutable' || true
              done
            done

            # webmanifest
            find static -type f -name '*.webmanifest' -printf '%P\n' | while read f; do
              az storage blob update --account-name $ACCOUNT --auth-mode login -c '$web' -n "$f" \
                --content-type 'application/manifest+json' \
                --content-cache-control 'public, max-age=300, must-revalidate' || true
            done